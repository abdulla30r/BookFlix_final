
@{
    ViewData["Title"] = "Home Page";
}

<partial name="_Notification" />

<br />


<div class="container">
  
    

   
    <div class="container mb-3">
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            </ol>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="~/images/slider2.png" class="d-block w-100" alt="Slide 1">
                </div>
                <div class="carousel-item">
                    <img src="~/images/slider1.png" class="d-block w-100" alt="Slide 2">
                </div>
                <div class="carousel-item">
                    <img src="~/images/slider3.png" class="d-block w-100" alt="Slide 3">
                </div>
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only"></span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only"></span>
            </a>
        </div>
    </div>

    
    <div style="width:80%;margin:auto">
        <div id="searchContainer" class="mt-3">
            <input type="text" id="searchInput" class="form-control" placeholder="Search">
        </div>
    </div>

    <div id="loadingSpinner" class="text-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>


    <div class="container">
        <div id="categoryFilter" class="mt-3">
            
        </div>

    </div>

    <div id="ajaxResponseContainer" class="row"></div>
    <div id="paginationContainer" class="mt-3 d-flex justify-content-center"></div>
   
   
</div>


@if (User.IsInRole("Admin"))
{
    <br />
    <div class="container">
        <div class="container"><hr /></div>
    </div>
}
else
{
    <div class="container bg-white p-3 rounded shadow-lg mb-4" style="margin-top: 50px; width:80%;">
        <div class="row justify-content-center">
            <div class="col-12">
                <form method="post" asp-action="sendMessage" onsubmit="return validateForm()">
                    <div class="input-group">
                        <input type="text" class="form-control" name="msg" placeholder="Give feedback" required>
                        <div class="input-group-append ms-3">
                            <button class="btn btn-outline-secondary" type="submit">Send</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}




<div class="container">
    <div class="row">
        <div class="col-md-4">
            <h5 class="text-center"><i class="bi bi-cash-coin"></i>  CASH ON DELIVERY</h5>
            <p class="text-center">Pay cash at your doorstep</p>
            <hr />
        </div>
        <div class="col-md-4">
            <h5 class="text-center"><i class="bi bi-truck"></i>  DELIVERY</h5>
            <p class="text-center">All over Bangladesh</p>
            <hr />
        </div>
        <div class="col-md-4">
            <h5 class="text-center"><i class="bi bi-arrow-clockwise"></i>  HAPPY RETURN</h5>
            <p class="text-center">7 days return facility</p>
            <hr />
        </div>
    </div>
</div>


<style>
    .carousel-item {
        text-align: center;
        min-height: auto;
    }

    .image-container {
        position: relative;
        overflow: hidden;
    }

    .image {
        transition: transform 0.3s ease;
    }

    .image-container:hover .image {
        transform: scale(1.05);
    }

    .image-container img {
        height: 200px;
        width: 150px;
    }
</style>


<script type="text/javascript">
    $(document).ready(function () {
        $('.bxslider').bxSlider({
            auto: true,
            mode: 'fade',
            speed: 1000,
            pause: 5000, 
            controls: false, 
            pager: true 
        });
    });
</script>



<script src="~/js/script.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    function validateForm() {
        var msgInput = document.forms[0]["msg"];
        if (msgInput.checkValidity() === false) {
            // Display a custom validation message or perform other actions
            alert("Please enter feedback before submitting.");
            return false;
        }
        return true;
    }
</script>

<script>
    var currentPage = 1;
    var itemsPerPage = 8;
    var result; 
    var selectedCategory = null;
    var loadingSpinner = $('#loadingSpinner');

    $.ajax({
        type: "GET",
        url: '@Url.Action("getProduct", "Home", new { area = "Customer" })',
        dataType: "json", 
        beforeSend: function () {
            loadingSpinner.show();
        },
        success: function (data) {
            result = data;
            displayProducts(result.value.productList, currentPage, itemsPerPage);
            addPagination(result.value.productList.length, itemsPerPage);
            addCategoryButtons(result.value.categoryList);
        },
        error: function (req, status, error) {
            console.log(status);
        },
        complete: function () {
            loadingSpinner.hide();
        }
    });

    function displayProducts(products, page, pageSize) {
        var container = $('#ajaxResponseContainer');
        container.empty();

        var filteredProducts = products;
        if (selectedCategory) {
            filteredProducts = products.filter(function (product) {
                return product.category.name === selectedCategory;
            });
        }

        var startIndex = (page - 1) * pageSize;
        var endIndex = startIndex + pageSize;
        var displayedProducts = filteredProducts.slice(startIndex, endIndex);

        displayedProducts.forEach(function (product) {
            var cardHtml = `
                        <div class="col-6 col-md-4 col-lg-3 mt-2">
                            <a href="/Customer/Home/Details/${product.id}">
                                <div class="mb-4" style="text-align:center">
                                    <div class="image-container">
                                            <img src="${product.imageUrl}" class="card-img-top image" style = "height:200px;width:150px;" alt = "Product Image" >
                                    </div>
                                    <p>${product.title}</p>
                                    <p style="margin-top:-20px"><strong>Tk. </strong>${product.price}</p>
                                </div>
                            </a>
                        </div>
                    `;


            container.append(cardHtml);
        });
    }

    function addPagination(totalItems, itemsPerPage) {
        var totalPages = Math.ceil(totalItems / itemsPerPage);
        var paginationContainer = $('#paginationContainer');
        paginationContainer.empty();

        var paginationHtml = '<ul class="pagination" style="font-size:15px">';
        for (var i = 1; i <= totalPages; i++) {
            paginationHtml += `<li class="page-item ${i === 1 ? 'active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
        }
        paginationHtml += '</ul>';

        paginationContainer.html(paginationHtml);

        paginationContainer.on('click', 'a', function (e) {
            e.preventDefault();
            var page = parseInt($(this).data('page'));
            if (!isNaN(page)) {
                currentPage = page;
                displayProducts(result.value.productList, currentPage, itemsPerPage);
                updatePagination(page);
            }
        });
    }

    function updatePagination(activePage) {
        $('#paginationContainer li').removeClass('active');
        $(`#paginationContainer li:has(a[data-page="${activePage}"])`).addClass('active');
    }

  
    $('#searchInput').on('input', function () {
        var searchQuery = $(this).val().toLowerCase();
        var filteredProducts = result.value.productList.filter(function (product) {
            return product.title.toLowerCase().includes(searchQuery);
        });

        displayProducts(filteredProducts, 1, itemsPerPage);
        addPagination(filteredProducts.length, itemsPerPage);
        currentPage = 1; 
        updatePagination(1);
    });

    function addCategoryButtons(categories) {
        var categoryFilter = $('#categoryFilter');
        var categoryButtonsHtml = '<div >';
        categoryButtonsHtml += '<button type="button" class="btn btn-outline-secondary rounded mb-2 active" style="margin-right:10px;" data-category="all">All</button>';

        categories.forEach(function (category) {
            categoryButtonsHtml += `<button type="button" class="btn btn-outline-secondary rounded mb-2" style="margin-right:10px;" data-category="${category.name}">${category.name}</button>`;
        });

        categoryButtonsHtml += '</div>';
        categoryFilter.html(categoryButtonsHtml);

        
        categoryFilter.on('click', 'button', function () {
            var category = $(this).data('category');
            selectedCategory = category === 'all' ? null : category;
            displayProducts(result.value.productList, 1, itemsPerPage);
            addPagination(getFilteredProductsCount(), itemsPerPage);
            updateCategoryButtons(category);
        });
    }

    $('[data-category="all"]').click();


    function updateCategoryButtons(activeCategory) {
        $('#categoryFilter button').removeClass('active');
        $(`#categoryFilter button[data-category="${activeCategory}"]`).addClass('active');
    }


    function getFilteredProductsCount() {
        if (selectedCategory) {
            return result.value.productList.filter(function (product) {
                return product.category.name === selectedCategory;
            }).length;
        } else {
            return result.value.productList.length;
        }
    }
</script>



